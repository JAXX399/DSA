#include <vector>
#include <map>  
#include <iostream>
#include <unordered_map>
#include <algorithm>
using namespace std;


class Solution {
  public:
    long subarrayXor(vector<int> &arr, int k) {
        long long xr = 0;
        long long cnt = 0;
        unordered_map<int, int> mpp;
        mpp[xr] = 1; // Initialize with 0 occurring once
        for(int i = 0; i < arr.size(); i++) {
            xr = xr ^ arr[i];
            int x = xr ^ k;
            cnt += mpp[x];
            mpp[xr]++;
        }
        return cnt;
    }
};

int main() {
    Solution sol;
    vector<int> nums = {4, 2, 2, 6, 4};
    int k = 6;
    
    int result = sol.subarrayXor(nums, k);
    
    cout << "Number of subarrays with XOR equal to " << k << ": " << result << endl;
    
    return 0;
}